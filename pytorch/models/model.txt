Model's parameters:
total parms: 845574
trainable parms: 845574
Model's state_dict:
p_extractor.conv1.weight, 	 torch.Size([64, 3, 1])p_extractor.conv1.bias, 	 torch.Size([64])p_extractor.conv2.weight, 	 torch.Size([128, 64, 1])p_extractor.conv2.bias, 	 torch.Size([128])p_extractor.conv3.weight, 	 torch.Size([1024, 128, 1])p_extractor.conv3.bias, 	 torch.Size([1024])p_extractor.bn1.weight, 	 torch.Size([64])p_extractor.bn1.bias, 	 torch.Size([64])p_extractor.bn1.running_mean, 	 torch.Size([64])p_extractor.bn1.running_var, 	 torch.Size([64])p_extractor.bn1.num_batches_tracked, 	 torch.Size([])p_extractor.bn2.weight, 	 torch.Size([128])p_extractor.bn2.bias, 	 torch.Size([128])p_extractor.bn2.running_mean, 	 torch.Size([128])p_extractor.bn2.running_var, 	 torch.Size([128])p_extractor.bn2.num_batches_tracked, 	 torch.Size([])p_extractor.bn3.weight, 	 torch.Size([1024])p_extractor.bn3.bias, 	 torch.Size([1024])p_extractor.bn3.running_mean, 	 torch.Size([1024])p_extractor.bn3.running_var, 	 torch.Size([1024])p_extractor.bn3.num_batches_tracked, 	 torch.Size([])n_extractor.conv1.weight, 	 torch.Size([64, 3, 1])n_extractor.conv1.bias, 	 torch.Size([64])n_extractor.conv2.weight, 	 torch.Size([128, 64, 1])n_extractor.conv2.bias, 	 torch.Size([128])n_extractor.conv3.weight, 	 torch.Size([1024, 128, 1])n_extractor.conv3.bias, 	 torch.Size([1024])n_extractor.bn1.weight, 	 torch.Size([64])n_extractor.bn1.bias, 	 torch.Size([64])n_extractor.bn1.running_mean, 	 torch.Size([64])n_extractor.bn1.running_var, 	 torch.Size([64])n_extractor.bn1.num_batches_tracked, 	 torch.Size([])n_extractor.bn2.weight, 	 torch.Size([128])n_extractor.bn2.bias, 	 torch.Size([128])n_extractor.bn2.running_mean, 	 torch.Size([128])n_extractor.bn2.running_var, 	 torch.Size([128])n_extractor.bn2.num_batches_tracked, 	 torch.Size([])n_extractor.bn3.weight, 	 torch.Size([1024])n_extractor.bn3.bias, 	 torch.Size([1024])n_extractor.bn3.running_mean, 	 torch.Size([1024])n_extractor.bn3.running_var, 	 torch.Size([1024])n_extractor.bn3.num_batches_tracked, 	 torch.Size([])p_predictor.fc1.weight, 	 torch.Size([256, 1024])p_predictor.fc1.bias, 	 torch.Size([256])p_predictor.bn1.weight, 	 torch.Size([256])p_predictor.bn1.bias, 	 torch.Size([256])p_predictor.bn1.running_mean, 	 torch.Size([256])p_predictor.bn1.running_var, 	 torch.Size([256])p_predictor.bn1.num_batches_tracked, 	 torch.Size([])p_predictor.fc2.weight, 	 torch.Size([64, 256])p_predictor.fc2.bias, 	 torch.Size([64])p_predictor.bn2.weight, 	 torch.Size([64])p_predictor.bn2.bias, 	 torch.Size([64])p_predictor.bn2.running_mean, 	 torch.Size([64])p_predictor.bn2.running_var, 	 torch.Size([64])p_predictor.bn2.num_batches_tracked, 	 torch.Size([])p_predictor.fc3.weight, 	 torch.Size([3, 64])p_predictor.fc3.bias, 	 torch.Size([3])n_predictor.fc1.weight, 	 torch.Size([256, 1024])n_predictor.fc1.bias, 	 torch.Size([256])n_predictor.bn1.weight, 	 torch.Size([256])n_predictor.bn1.bias, 	 torch.Size([256])n_predictor.bn1.running_mean, 	 torch.Size([256])n_predictor.bn1.running_var, 	 torch.Size([256])n_predictor.bn1.num_batches_tracked, 	 torch.Size([])n_predictor.fc2.weight, 	 torch.Size([64, 256])n_predictor.fc2.bias, 	 torch.Size([64])n_predictor.bn2.weight, 	 torch.Size([64])n_predictor.bn2.bias, 	 torch.Size([64])n_predictor.bn2.running_mean, 	 torch.Size([64])n_predictor.bn2.running_var, 	 torch.Size([64])n_predictor.bn2.num_batches_tracked, 	 torch.Size([])n_predictor.fc3.weight, 	 torch.Size([3, 64])n_predictor.fc3.bias, 	 torch.Size([3])